// 문제88 : 지식이의 게임 개발

// 지식이는 게임을 만드는 것을 좋아합니다. 하지만 매번 다른 크기의 지도와 장애물을 배치하는데 불편함을 겪고 있습니다. 이런 불편함을 해결하기 위해 **지도의 크기와 장애물의 위치, 캐릭터의 위치만 입력하면 게임 지형을 완성해 주는 프로그램**을 만들고 싶습니다.  지식이를 위해 게임 지형을 만드는 프로그램을 작성해 주세요.

// - 가로(n), 세로(m)의 크기가 주어집니다.
// - 지형의 테두리는 벽으로 이루어져 있습니다.
// - 캐릭터가 있는 좌표가 배열 형태로 주어집니다.
// - 장애물이 있는 좌표가 2차원 배열 형태로 주어집니다.

// 지도는 n x m 크기의 배열이며 배열 안의 값은
//    -움직일 수 있는 공간(0)
//    -캐릭터(1)
//    -벽(2)
// 3개로 구분되어 있습니다.

// ```jsx
// **입출력예시**

// **입력**
// 가로 = 4
// 세로 = 5
// 캐릭터위치 = [0,0]
// 장애물 = [[0,1],[1,1],[2,3],[1,3]]

// make_map(가로, 세로, 캐릭터위치, 장애물)

// **출력**
// [2, 2, 2, 2, 2, 2]
// [2, 1, 2, 0, 0, 2]
// [2, 0, 2, 0, 2, 2]
// [2, 0, 0, 0, 2, 2]
// [2, 0, 0, 0, 0, 2]
// [2, 0, 0, 0, 0, 2]
// [2, 2, 2, 2, 2, 2]
// ```

const 가로 = 4;
const 세로 = 5;
const 캐릭터위치 = [0,0];
const 장애물 = [[0,1],[1,1],[2,3],[1,3]];

function make_map(가로, 세로, 캐릭터위치, 장애물){
    // 지도 그리기
    let map = []
    let line = [];
    for (let i=0; i < 세로 + 2; i++){
        for (let j=0; j < 가로 + 2; j++){
            if (j === 0 || j === 가로 + 1 || i === 0 || i === 세로 + 1){
                line.push(2);
            }
            else {
                line.push(0);
            }
        }
        map.push(line);
        line = [];
    }
    // 캐릭터 세우기
    map[캐릭터위치[0] + 1][캐릭터위치[1] + 1] = 1;

    // 장애물 그리기
    장애물.forEach(item => {
        if (map[item[0] + 1][item[1] + 1] !== 1){
            map[item[0] + 1][item[1] + 1] = 2;
        }
    })
    return map;
}

console.log(make_map(가로, 세로, 캐릭터위치, 장애물));
