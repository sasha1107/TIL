// # 문제97 : 택배 배달

// n 명의 택배 배달원은 쌓인 택배를 배달해야 합니다.
// 각 택배는 접수된 순서로 배달이 되며 택배마다 거리가 주어집니다. 
// 거리1당 1의 시간이 걸린다고 가정하였을 때 모든 택배가 배달 완료될 시간을 구하세요.

// 1. 모든 택배의 배송 시간 1 이상이며 배달지에 도착하고 돌아오는 왕복 시간입니다.
// 2. 택배는 물류창고에서 출발합니다.
// 3. 배달을 완료하면 다시 물류창고로 돌아가 택배를 받습니다.
// 4. 물류창고로 돌아가 택배를 받으면 배달을 시작합니다.
// 5. 택배를 상차할 때 시간은 걸리지 않습니다.

// 입력은 배달원의 수와 택배를 배달하는 배달 시간이 주어집니다.

// ex) 배달원이 3명이고 각 거리가 [1,2,1,3,3,3]인 순서로 들어오는 경우



//n:택배원 수, l:택배들
function sol(n, l){
    
    let answer = 0; // 모든 택배가 배달 완료될 시간
    
    //택배원 수 만큼의 배열 생성
    let man = new Array(n).fill(0);
        
    //모든 택배가 상차 되었을 경우 종료
    while (l.length !== 0){

        //택배원 수 만큼 반복
        for (let j = 0; j < man.length; j++){
            //택배원이 배달하고있는 택배의 잔여거리가 0인경우(배송완료인경우) 택배상차
            if (man[j] == 0 && l){
                man[j] += l.shift();
            }
        }

        //택배원들 배송거리 -1 처리
        man = man.map(x => x = x -1);

        //1회 반복당 1의 시간증가
        answer += 1;
    }

    //남은 택배 잔여거리 중 가장 많은 시간이 남은 택배를 더해줌
    answer += Math.max.apply(null, man);

    return answer;
}

const 배달원 = 3;
const 택배 = [1, 2, 1, 3, 3, 3];

console.log(sol(배달원, 택배));